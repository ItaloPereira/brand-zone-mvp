// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Images {
  id        String   @id @default(uuid())
  name      String   @db.VarChar(255)
  src       String   @db.VarChar(1024)
  comments  String?  @db.VarChar(2000)
  userId    String
  groupId   String?
  group     Group? @relation(fields: [groupId], references: [id])
  tags      TagsOnImages[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model ColorPalettes {
  id        String   @id @default(uuid())
  name      String   @db.VarChar(255)
  colors    String[] @db.VarChar(255)
  comments  String?  @db.VarChar(2000)
  userId    String
  groupId   String?
  group     Group? @relation(fields: [groupId], references: [id])
  tags      TagsOnPalettes[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Group {
  id        String         @id @default(uuid())
  name      String         @db.VarChar(100)
  userId    String
  images    Images[]
  palettes  ColorPalettes[]
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt

  @@index([userId])
}

model Tag {
  id        String           @id @default(uuid())
  name      String           @db.VarChar(100)
  userId    String
  images    TagsOnImages[]
  palettes  TagsOnPalettes[]
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt

  @@index([userId])
}

model TagsOnImages {
  id        String    @id @default(uuid())
  imageId   String
  image     Images    @relation(fields: [imageId], references: [id], onDelete: Cascade)
  tagId     String
  tag       Tag       @relation(fields: [tagId], references: [id], onDelete: Cascade)
  createdAt DateTime  @default(now())

  @@index([imageId])
  @@index([tagId])
}

model TagsOnPalettes {
  id        String        @id @default(uuid())
  paletteId String
  palette   ColorPalettes @relation(fields: [paletteId], references: [id], onDelete: Cascade)
  tagId     String
  tag       Tag           @relation(fields: [tagId], references: [id], onDelete: Cascade)
  createdAt DateTime      @default(now())

  @@index([paletteId])
  @@index([tagId])
}